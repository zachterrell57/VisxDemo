import {
  coerceNumber,
  getTicks,
  toString
} from "./chunk-YWCZHVPV.js";
import {
  Line
} from "./chunk-KB54IECT.js";
import {
  Group,
  require_classnames
} from "./chunk-ZJO24NDI.js";
import "./chunk-QEIGTTKN.js";
import {
  require_prop_types
} from "./chunk-XUWKLLY5.js";
import {
  Text
} from "./chunk-QO6TYQ55.js";
import "./chunk-MDMDGUUI.js";
import {
  require_react
} from "./chunk-5SDAPIJE.js";
import {
  __toESM
} from "./chunk-TWLJ45QX.js";

// node_modules/@visx/axis/esm/axis/Axis.js
var import_prop_types = __toESM(require_prop_types());
var import_react3 = __toESM(require_react());
var import_classnames3 = __toESM(require_classnames());

// node_modules/@visx/axis/esm/axis/AxisRenderer.js
var import_react2 = __toESM(require_react());
var import_classnames2 = __toESM(require_classnames());

// node_modules/@visx/axis/esm/constants/orientation.js
var Orientation = {
  top: "top",
  left: "left",
  right: "right",
  bottom: "bottom"
};
var orientation_default = Orientation;

// node_modules/@visx/axis/esm/utils/getLabelTransform.js
function getLabelTransform(_ref) {
  var labelOffset = _ref.labelOffset, labelProps = _ref.labelProps, orientation = _ref.orientation, range = _ref.range, tickLabelFontSize = _ref.tickLabelFontSize, tickLength = _ref.tickLength;
  var sign = orientation === orientation_default.left || orientation === orientation_default.top ? -1 : 1;
  var x;
  var y;
  var transform;
  if (orientation === orientation_default.top || orientation === orientation_default.bottom) {
    var yBottomOffset = orientation === orientation_default.bottom && typeof labelProps.fontSize === "number" ? labelProps.fontSize : 0;
    x = (Number(range[0]) + Number(range[range.length - 1])) / 2;
    y = sign * (tickLength + labelOffset + tickLabelFontSize + yBottomOffset);
  } else {
    x = sign * ((Number(range[0]) + Number(range[range.length - 1])) / 2);
    y = -(tickLength + labelOffset);
    transform = "rotate(" + sign * 90 + ")";
  }
  return {
    x,
    y,
    transform
  };
}

// node_modules/@visx/axis/esm/axis/Ticks.js
var import_react = __toESM(require_react());
var import_classnames = __toESM(require_classnames());
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function Ticks(_ref) {
  var hideTicks = _ref.hideTicks, horizontal = _ref.horizontal, orientation = _ref.orientation, tickClassName = _ref.tickClassName, tickComponent = _ref.tickComponent, allTickLabelProps = _ref.tickLabelProps, _ref$tickStroke = _ref.tickStroke, tickStroke = _ref$tickStroke === void 0 ? "#222" : _ref$tickStroke, tickTransform = _ref.tickTransform, ticks = _ref.ticks, strokeWidth = _ref.strokeWidth, tickLineProps = _ref.tickLineProps;
  return ticks.map(function(_ref2) {
    var _allTickLabelProps$in;
    var value = _ref2.value, index = _ref2.index, from = _ref2.from, to = _ref2.to, formattedValue = _ref2.formattedValue;
    var tickLabelProps = (_allTickLabelProps$in = allTickLabelProps[index]) != null ? _allTickLabelProps$in : {};
    var tickLabelFontSize = Math.max(10, typeof tickLabelProps.fontSize === "number" && tickLabelProps.fontSize || 0);
    var tickYCoord = to.y + (horizontal && orientation !== orientation_default.top ? tickLabelFontSize : 0);
    return import_react.default.createElement(Group, {
      key: "visx-tick-" + value + "-" + index,
      className: (0, import_classnames.default)("visx-axis-tick", tickClassName),
      transform: tickTransform
    }, !hideTicks && import_react.default.createElement(Line, _extends({
      from,
      to,
      stroke: tickStroke,
      strokeWidth,
      strokeLinecap: "square"
    }, tickLineProps)), tickComponent ? tickComponent(_extends({}, tickLabelProps, {
      x: to.x,
      y: tickYCoord,
      formattedValue
    })) : import_react.default.createElement(Text, _extends({
      x: to.x,
      y: tickYCoord
    }, tickLabelProps), formattedValue));
  });
}

// node_modules/@visx/axis/esm/axis/AxisRenderer.js
function _extends2() {
  _extends2 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}
var defaultTextProps = {
  textAnchor: "middle",
  fontFamily: "Arial",
  fontSize: 10,
  fill: "#222"
};
function AxisRenderer(_ref) {
  var axisFromPoint = _ref.axisFromPoint, axisLineClassName = _ref.axisLineClassName, axisToPoint = _ref.axisToPoint, hideAxisLine = _ref.hideAxisLine, hideTicks = _ref.hideTicks, horizontal = _ref.horizontal, _ref$label = _ref.label, label = _ref$label === void 0 ? "" : _ref$label, labelClassName = _ref.labelClassName, _ref$labelOffset = _ref.labelOffset, labelOffset = _ref$labelOffset === void 0 ? 14 : _ref$labelOffset, _ref$labelProps = _ref.labelProps, labelProps = _ref$labelProps === void 0 ? defaultTextProps : _ref$labelProps, _ref$orientation = _ref.orientation, orientation = _ref$orientation === void 0 ? orientation_default.bottom : _ref$orientation, scale = _ref.scale, _ref$stroke = _ref.stroke, stroke = _ref$stroke === void 0 ? "#222" : _ref$stroke, strokeDasharray = _ref.strokeDasharray, _ref$strokeWidth = _ref.strokeWidth, strokeWidth = _ref$strokeWidth === void 0 ? 1 : _ref$strokeWidth, tickClassName = _ref.tickClassName, tickComponent = _ref.tickComponent, tickLineProps = _ref.tickLineProps, _ref$tickLabelProps = _ref.tickLabelProps, tickLabelProps = _ref$tickLabelProps === void 0 ? function() {
    return defaultTextProps;
  } : _ref$tickLabelProps, _ref$tickLength = _ref.tickLength, tickLength = _ref$tickLength === void 0 ? 8 : _ref$tickLength, _ref$tickStroke = _ref.tickStroke, tickStroke = _ref$tickStroke === void 0 ? "#222" : _ref$tickStroke, tickTransform = _ref.tickTransform, ticks = _ref.ticks, _ref$ticksComponent = _ref.ticksComponent, ticksComponent = _ref$ticksComponent === void 0 ? Ticks : _ref$ticksComponent;
  var allTickLabelProps = ticks.map(function(_ref2) {
    var value = _ref2.value, index = _ref2.index;
    return tickLabelProps(value, index, ticks);
  });
  var maxTickLabelFontSize = Math.max.apply(Math, [10].concat(allTickLabelProps.map(function(props) {
    return typeof props.fontSize === "number" ? props.fontSize : 0;
  })));
  return import_react2.default.createElement(import_react2.default.Fragment, null, ticksComponent({
    hideTicks,
    horizontal,
    orientation,
    scale,
    tickClassName,
    tickComponent,
    tickLabelProps: allTickLabelProps,
    tickStroke,
    tickTransform,
    ticks,
    strokeWidth,
    tickLineProps
  }), !hideAxisLine && import_react2.default.createElement(Line, {
    className: (0, import_classnames2.default)("visx-axis-line", axisLineClassName),
    from: axisFromPoint,
    to: axisToPoint,
    stroke,
    strokeWidth,
    strokeDasharray
  }), label && import_react2.default.createElement(Text, _extends2({
    className: (0, import_classnames2.default)("visx-axis-label", labelClassName)
  }, getLabelTransform({
    labelOffset,
    labelProps,
    orientation,
    range: scale.range(),
    tickLabelFontSize: maxTickLabelFontSize,
    tickLength
  }), labelProps), label));
}

// node_modules/@visx/axis/esm/utils/getTickPosition.js
function getTickPosition(scale, align) {
  if (align === void 0) {
    align = "center";
  }
  var s = scale;
  if (align !== "start" && "bandwidth" in s) {
    var offset = s.bandwidth();
    if (align === "center")
      offset /= 2;
    if (s.round())
      offset = Math.round(offset);
    return function(d) {
      var scaledValue = s(d);
      return typeof scaledValue === "number" ? scaledValue + offset : scaledValue;
    };
  }
  return scale;
}

// node_modules/@visx/axis/esm/utils/getTickFormatter.js
function getTickFormatter(scale) {
  var s = scale;
  if ("tickFormat" in s) {
    return s.tickFormat();
  }
  return toString;
}

// node_modules/@visx/point/esm/Point.js
var Point = function() {
  function Point2(_ref) {
    var _ref$x = _ref.x, x = _ref$x === void 0 ? 0 : _ref$x, _ref$y = _ref.y, y = _ref$y === void 0 ? 0 : _ref$y;
    this.x = 0;
    this.y = 0;
    this.x = x;
    this.y = y;
  }
  var _proto = Point2.prototype;
  _proto.value = function value() {
    return {
      x: this.x,
      y: this.y
    };
  };
  _proto.toArray = function toArray() {
    return [this.x, this.y];
  };
  return Point2;
}();

// node_modules/@visx/axis/esm/utils/createPoint.js
function createPoint(_ref, horizontal) {
  var x = _ref.x, y = _ref.y;
  return new Point(horizontal ? {
    x,
    y
  } : {
    x: y,
    y: x
  });
}

// node_modules/@visx/axis/esm/utils/getAxisRangePaddingConfig.js
function _extends3() {
  _extends3 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends3.apply(this, arguments);
}
var defaultAxisRangePadding = 0;
function getAxisRangePaddingConfig(originalRangePadding) {
  if (originalRangePadding === void 0) {
    originalRangePadding = defaultAxisRangePadding;
  }
  return typeof originalRangePadding === "number" ? {
    start: originalRangePadding,
    end: originalRangePadding
  } : _extends3({
    start: defaultAxisRangePadding,
    end: defaultAxisRangePadding
  }, originalRangePadding);
}

// node_modules/@visx/axis/esm/axis/Axis.js
var _excluded = ["children", "axisClassName", "hideAxisLine", "hideTicks", "hideZero", "left", "numTicks", "orientation", "rangePadding", "scale", "tickFormat", "tickLength", "tickValues", "top"];
function _extends4() {
  _extends4 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends4.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function Axis(_ref) {
  var _ref$children = _ref.children, children = _ref$children === void 0 ? AxisRenderer : _ref$children, axisClassName = _ref.axisClassName, _ref$hideAxisLine = _ref.hideAxisLine, hideAxisLine = _ref$hideAxisLine === void 0 ? false : _ref$hideAxisLine, _ref$hideTicks = _ref.hideTicks, hideTicks = _ref$hideTicks === void 0 ? false : _ref$hideTicks, _ref$hideZero = _ref.hideZero, hideZero = _ref$hideZero === void 0 ? false : _ref$hideZero, _ref$left = _ref.left, left = _ref$left === void 0 ? 0 : _ref$left, _ref$numTicks = _ref.numTicks, numTicks = _ref$numTicks === void 0 ? 10 : _ref$numTicks, _ref$orientation = _ref.orientation, orientation = _ref$orientation === void 0 ? orientation_default.bottom : _ref$orientation, _ref$rangePadding = _ref.rangePadding, rangePadding = _ref$rangePadding === void 0 ? 0 : _ref$rangePadding, scale = _ref.scale, tickFormat = _ref.tickFormat, _ref$tickLength = _ref.tickLength, tickLength = _ref$tickLength === void 0 ? 8 : _ref$tickLength, tickValues = _ref.tickValues, _ref$top = _ref.top, top = _ref$top === void 0 ? 0 : _ref$top, restProps = _objectWithoutPropertiesLoose(_ref, _excluded);
  var format = tickFormat != null ? tickFormat : getTickFormatter(scale);
  var isLeft = orientation === orientation_default.left;
  var isTop = orientation === orientation_default.top;
  var horizontal = isTop || orientation === orientation_default.bottom;
  var tickPosition = getTickPosition(scale);
  var tickSign = isLeft || isTop ? -1 : 1;
  var range = scale.range();
  var rangePaddingConfig = getAxisRangePaddingConfig(rangePadding);
  var axisFromPoint = createPoint({
    x: Number(range[0]) + 0.5 - rangePaddingConfig.start,
    y: 0
  }, horizontal);
  var axisToPoint = createPoint({
    x: Number(range[range.length - 1]) + 0.5 + rangePaddingConfig.end,
    y: 0
  }, horizontal);
  var filteredTickValues = (tickValues != null ? tickValues : getTicks(scale, numTicks)).filter(function(value) {
    return !hideZero || value !== 0 && value !== "0";
  }).map(function(value, index) {
    return {
      value,
      index
    };
  });
  var ticks = filteredTickValues.map(function(_ref2) {
    var value = _ref2.value, index = _ref2.index;
    var scaledValue = coerceNumber(tickPosition(value));
    return {
      value,
      index,
      from: createPoint({
        x: scaledValue,
        y: 0
      }, horizontal),
      to: createPoint({
        x: scaledValue,
        y: tickLength * tickSign
      }, horizontal),
      formattedValue: format(value, index, filteredTickValues)
    };
  });
  return import_react3.default.createElement(Group, {
    className: (0, import_classnames3.default)("visx-axis", axisClassName),
    top,
    left
  }, children(_extends4({}, restProps, {
    axisFromPoint,
    axisToPoint,
    hideAxisLine,
    hideTicks,
    hideZero,
    horizontal,
    numTicks,
    orientation,
    rangePadding,
    scale,
    tickFormat: format,
    tickLength,
    tickPosition,
    tickSign,
    ticks
  })));
}

// node_modules/@visx/axis/esm/axis/AxisLeft.js
var import_react4 = __toESM(require_react());
var import_classnames4 = __toESM(require_classnames());
var _excluded2 = ["axisClassName", "labelOffset", "tickLabelProps", "tickLength"];
function _extends5() {
  _extends5 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends5.apply(this, arguments);
}
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var leftTickLabelProps = function leftTickLabelProps2() {
  return {
    dx: "-0.25em",
    dy: "0.25em",
    fill: "#222",
    fontFamily: "Arial",
    fontSize: 10,
    textAnchor: "end"
  };
};
function AxisLeft(_ref) {
  var axisClassName = _ref.axisClassName, _ref$labelOffset = _ref.labelOffset, labelOffset = _ref$labelOffset === void 0 ? 36 : _ref$labelOffset, _ref$tickLabelProps = _ref.tickLabelProps, tickLabelProps = _ref$tickLabelProps === void 0 ? leftTickLabelProps : _ref$tickLabelProps, _ref$tickLength = _ref.tickLength, tickLength = _ref$tickLength === void 0 ? 8 : _ref$tickLength, restProps = _objectWithoutPropertiesLoose2(_ref, _excluded2);
  return import_react4.default.createElement(Axis, _extends5({
    axisClassName: (0, import_classnames4.default)("visx-axis-left", axisClassName),
    labelOffset,
    orientation: orientation_default.left,
    tickLabelProps,
    tickLength
  }, restProps));
}

// node_modules/@visx/axis/esm/axis/AxisRight.js
var import_react5 = __toESM(require_react());
var import_classnames5 = __toESM(require_classnames());
var _excluded3 = ["axisClassName", "labelOffset", "tickLabelProps", "tickLength"];
function _extends6() {
  _extends6 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends6.apply(this, arguments);
}
function _objectWithoutPropertiesLoose3(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var rightTickLabelProps = function rightTickLabelProps2() {
  return {
    dx: "0.25em",
    dy: "0.25em",
    fill: "#222",
    fontFamily: "Arial",
    fontSize: 10,
    textAnchor: "start"
  };
};
function AxisRight(_ref) {
  var axisClassName = _ref.axisClassName, _ref$labelOffset = _ref.labelOffset, labelOffset = _ref$labelOffset === void 0 ? 36 : _ref$labelOffset, _ref$tickLabelProps = _ref.tickLabelProps, tickLabelProps = _ref$tickLabelProps === void 0 ? rightTickLabelProps : _ref$tickLabelProps, _ref$tickLength = _ref.tickLength, tickLength = _ref$tickLength === void 0 ? 8 : _ref$tickLength, restProps = _objectWithoutPropertiesLoose3(_ref, _excluded3);
  return import_react5.default.createElement(Axis, _extends6({
    axisClassName: (0, import_classnames5.default)("visx-axis-right", axisClassName),
    labelOffset,
    orientation: orientation_default.right,
    tickLabelProps,
    tickLength
  }, restProps));
}

// node_modules/@visx/axis/esm/axis/AxisTop.js
var import_react6 = __toESM(require_react());
var import_classnames6 = __toESM(require_classnames());
var _excluded4 = ["axisClassName", "labelOffset", "tickLabelProps", "tickLength"];
function _extends7() {
  _extends7 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends7.apply(this, arguments);
}
function _objectWithoutPropertiesLoose4(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var topTickLabelProps = function topTickLabelProps2() {
  return {
    dy: "-0.75em",
    fill: "#222",
    fontFamily: "Arial",
    fontSize: 10,
    textAnchor: "middle"
  };
};
function AxisTop(_ref) {
  var axisClassName = _ref.axisClassName, _ref$labelOffset = _ref.labelOffset, labelOffset = _ref$labelOffset === void 0 ? 8 : _ref$labelOffset, _ref$tickLabelProps = _ref.tickLabelProps, tickLabelProps = _ref$tickLabelProps === void 0 ? topTickLabelProps : _ref$tickLabelProps, _ref$tickLength = _ref.tickLength, tickLength = _ref$tickLength === void 0 ? 8 : _ref$tickLength, restProps = _objectWithoutPropertiesLoose4(_ref, _excluded4);
  return import_react6.default.createElement(Axis, _extends7({
    axisClassName: (0, import_classnames6.default)("visx-axis-top", axisClassName),
    labelOffset,
    orientation: orientation_default.top,
    tickLabelProps,
    tickLength
  }, restProps));
}

// node_modules/@visx/axis/esm/axis/AxisBottom.js
var import_react7 = __toESM(require_react());
var import_classnames7 = __toESM(require_classnames());
var _excluded5 = ["axisClassName", "labelOffset", "tickLabelProps", "tickLength"];
function _extends8() {
  _extends8 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends8.apply(this, arguments);
}
function _objectWithoutPropertiesLoose5(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var bottomTickLabelProps = function bottomTickLabelProps2() {
  return {
    dy: "0.25em",
    fill: "#222",
    fontFamily: "Arial",
    fontSize: 10,
    textAnchor: "middle"
  };
};
function AxisBottom(_ref) {
  var axisClassName = _ref.axisClassName, _ref$labelOffset = _ref.labelOffset, labelOffset = _ref$labelOffset === void 0 ? 8 : _ref$labelOffset, _ref$tickLabelProps = _ref.tickLabelProps, tickLabelProps = _ref$tickLabelProps === void 0 ? bottomTickLabelProps : _ref$tickLabelProps, _ref$tickLength = _ref.tickLength, tickLength = _ref$tickLength === void 0 ? 8 : _ref$tickLength, restProps = _objectWithoutPropertiesLoose5(_ref, _excluded5);
  return import_react7.default.createElement(Axis, _extends8({
    axisClassName: (0, import_classnames7.default)("visx-axis-bottom", axisClassName),
    labelOffset,
    orientation: orientation_default.bottom,
    tickLabelProps,
    tickLength
  }, restProps));
}
export {
  Axis,
  AxisBottom,
  AxisLeft,
  AxisRight,
  AxisTop,
  orientation_default as Orientation
};
//# sourceMappingURL=@visx_axis.js.map
